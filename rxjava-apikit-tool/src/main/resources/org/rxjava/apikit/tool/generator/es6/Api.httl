<!--#set(ApiClassInfo classInfo)-->
<!--#set(JavaScriptApiWrapper wrapper)-->
<!--#set(TypeInfo type)-->
<!--#set(ApiMethodInfo method)-->
<!--#set(ApiMethodParamInfo param)-->
$!{wrapper.imports}

class $!{wrapper.getDistClassName()} extends AbstractApi {
        
<!--#for(method : classInfo.methodInfos)-->
    /**
    $!{wrapper.formatBaseComment(method.comment,"    * ")}
     *
    $!{wrapper.requestComment(method,"    * ")}
     */
    $!{method.name} = ($!{wrapper.params(method)}) => {
        <!--#if(method.pathParams)-->
        let _path = {};
        <!--    #for(param : method.pathParams)-->
        _path["$!{param.name}"] = $!{param.name};
        <!--    #end-->
        <!--#else-->
        let _path = null;
        <!--#end-->
        <!--#if(method.formParams)-->
        <!--#set(param = method.formParams[0])-->
        return super._request("$!{wrapper.serviceId}", "$!{wrapper.fieldName}", "$!{method.type.name()}", "$!{method.url}", _path, $!{param.name});
        <!--#else-->
        return super._request("$!{wrapper.serviceId}", "$!{wrapper.fieldName}", "$!{method.type.name()}", "$!{method.url}", _path, null);
        <!--#end-->
    }
<!--#end-->
}

export { $!{wrapper.getDistClassName()} };
declare const $!{wrapper.fieldName}: $!{wrapper.getDistClassName()};
export default $!{wrapper.fieldName};